{"version":3,"sources":["app/components/AppNavbar.js","app/services/BackendService.js","app/components/FirstFloor.js","app/components/SecondFloor.js","app/components/ThirdFloor.js","app/components/AllData.js","App.js","reportWebVitals.js","index.js"],"names":["AppNavbar","Navbar","color","dark","expand","Nav","className","NavLink","href","Component","withRouter","BackendService","axios","get","FirstFloor","props","state","items","getFirstFloor","then","response","setState","data","catch","error","console","this","Container","fluid","Row","style","marginTop","Col","sm","md","size","offset","Label","for","timeStamp","floor","o2_level","co2_level","so2_level","co_level","c_level","aqms_message","SecondFloor","getSecondFloor","ThirdFloor","getThirdFloor","AllData","getAllData","gasColor","aqms","isError","o2Color","checkError","map","item","background","id","App","Switch","Route","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","Fragment","document","getElementById"],"mappings":"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","file":"static/js/main.cc5c905f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Nav, Navbar, NavLink } from 'reactstrap';\nimport { withRouter } from 'react-router-dom';\nimport '../../App.css';\n\n\n/* App NavBar which contains the navigation options like sigin, signup, signout*/\n\nclass AppNavbar extends Component {\n    \n    render() {\n        return <Navbar color=\"dark\" dark expand=\"md\">\n            <Nav className=\"mr-auto\" >\n                <NavLink href=\"/firstFloor\" className=\"nav-container\">First Floor</NavLink>\n                <NavLink href=\"/secondFloor\" className=\"nav-container\">Second Floor</NavLink>\n                <NavLink href=\"/thirdFloor\" className=\"nav-container\">Third Floor</NavLink>\n                <NavLink href=\"/allData\" className=\"nav-container\">All Data</NavLink>\n            </Nav>\n            \n        </Navbar>;\n    }\n}\n\nexport default withRouter(AppNavbar);","import axios from 'axios';\n\n\n\nclass BackendService {\n\n\n    async getAllData() {\n        return await axios.get('http://aqmsfinal-env.eba-hzzp5d8a.us-east-1.elasticbeanstalk.com/airQualityInfo');\n    }\n\n    async getFirstFloor() {\n        return await axios.get('http://aqmsfinal-env.eba-hzzp5d8a.us-east-1.elasticbeanstalk.com/firstFloor');\n    }\n\n    async getSecondFloor() {\n        return await axios.get('http://aqmsfinal-env.eba-hzzp5d8a.us-east-1.elasticbeanstalk.com/secondFloor');\n    }\n\n    async getThirdFloor() {\n        return await axios.get('http://aqmsfinal-env.eba-hzzp5d8a.us-east-1.elasticbeanstalk.com/thirdFloor');\n    }\n}\n\nexport default new BackendService();","import AppNavbar from './AppNavbar';\nimport React, { Component } from 'react';\nimport { Container } from 'reactstrap';\nimport BackendService from '../services/BackendService';\nimport {   Label, Row, Col } from 'reactstrap';\nimport '../../App.css';\n\nclass FirstFloor extends Component {\n\n    /* uses a backend service to get all the data present in the first floor */\n    constructor(props) {\n        super(props);\n        this.state = {\n            items: [],\n        };\n    }\n    \n\n     /* stores the stream data */\n    componentDidMount() {\n        BackendService.getFirstFloor()\n        .then((response) =>  this.setState({items: response.data}))\n        .catch(error => {\n            console.error(error);\n          });\n    };\n  \n    /* this shows the lastest aqi record in that floor */\n    render() {\n        const {items } = this.state;\n        //var date = items.timeStamp.slice(0,9);\n        return (\n            <div>\n                <AppNavbar/>\n\n                <Container fluid>\n                    <Row style={{marginTop:\"20px\"}}>\n                        <Col sm=\"12\" md={{ size: 4, offset: 4 }}>\n\n                            <div style={{marginTop:\"20px\"}}>\n                                <Label for=\"welcome\"><strong>Here is the first floor data, {items.timeStamp} :-)</strong></Label>\n                            </div>\n\n                            <div style={{marginTop:\"20px\"}} className='login-form'> \n                                <ol key = { items.timeStamp }>\n                                    <div style={{marginTop:\"10px\"}}> \n                                        <Label for=\"floor\"><strong>Floor:{ \"  \" +items.floor}</strong></Label>\n                                    </div>\n                                    <div style={{marginTop:\"10px\"}}>      \n                                        <Label for=\"o2_level\"><strong>Oxygen Level:{ \"  \" + items.o2_level}</strong></Label>\n                                    </div>\n                                    <div style={{marginTop:\"10px\"}}>\n                                        <Label for=\"co2_level\"><strong>CO2 level:{ \"  \" + items.co2_level}</strong></Label>\n                                    </div>\n                                    <div style={{marginTop:\"10px\"}}>    \n                                        <Label for=\"so2_level\"><strong>SO2 level:{\"  \" + items.so2_level}</strong></Label>\n                                    </div>\n                                    <div style={{marginTop:\"10px\"}}>      \n                                        <Label for=\"co_level\"><strong>CO level:{ \"  \" + items.co_level}</strong></Label>\n                                    </div>\n                                    <div style={{marginTop:\"10px\"}}>\n                                        <Label for=\"c_level\"><strong>C level:{ \"  \" + items.c_level}</strong></Label>\n                                    </div>\n                                    <div style={{marginTop:\"10px\"}}>    \n                                        <Label for=\"air_quality_level\"><strong>AQI:{\"  \" + items.aqms_message}</strong></Label>\n                                    </div>\n                                </ol>               \n                            </div>\n                            \n\n                        </Col>\n                    </Row>\n                </Container> \n\n            </div>\n        );\n    }\n}\n\nexport default FirstFloor;","import AppNavbar from './AppNavbar';\nimport '../../App.css';\n\nimport React, { Component } from 'react';\nimport { Container , Label, Row, Col} from 'reactstrap';\nimport BackendService from '../services/BackendService';\n\nclass SecondFloor extends Component {\n\n    /* uses a backend service to get all the data present in the second floor */\n    constructor(props) {\n        super(props);\n        this.state = {\n        items: [],\n        };\n    }\n    /* stores the stream data */\n    componentDidMount() {\n        BackendService.getSecondFloor()\n        .then((response) =>  this.setState({items: response.data}))\n        .catch(error => {\n            console.error(error);\n          });\n        \n        };\n  \n    /* this shows the lastest aqi record in that floor */\n    render() {\n        const {items } = this.state;\n        return (\n            <div>\n                <AppNavbar/>\n                <Container fluid>\n                    <Row style={{marginTop:\"20px\"}}>\n                        <Col sm=\"12\" md={{ size: 4, offset: 4 }}>\n                            <div style={{marginTop:\"20px\"}}>\n                                <Label for=\"welcome\"><strong>Here is the second floor data, {items.timeStamp} :-)</strong></Label>\n                            </div>\n\n                            <div style={{marginTop:\"20px\"}} className='login-form'> \n                                <ol key = { items.timeStamp } >\n                                    <div style={{marginTop:\"10px\"}}> \n                                        <Label for=\"floor\"><strong>Floor:{ \"  \" +items.floor}</strong></Label>\n                                    </div>\n                                    <div style={{marginTop:\"10px\"}}>      \n                                        <Label for=\"o2_level\"><strong>Oxygen Level:{ \"  \" + items.o2_level}</strong></Label>\n                                    </div>\n                                    <div style={{marginTop:\"10px\"}}>\n                                        <Label for=\"co2_level\"><strong>CO2 level:{ \"  \" + items.co2_level}</strong></Label>\n                                    </div>\n                                    <div style={{marginTop:\"10px\"}}>    \n                                        <Label for=\"so2_level\"><strong>SO2 level:{\"  \" + items.so2_level}</strong></Label>\n                                    </div>\n                                    <div style={{marginTop:\"10px\"}}>      \n                                        <Label for=\"co_level\"><strong>CO level:{ \"  \" + items.co_level}</strong></Label>\n                                    </div>\n                                    <div style={{marginTop:\"10px\"}}>\n                                        <Label for=\"c_level\"><strong>C level:{ \"  \" + items.c_level}</strong></Label>\n                                    </div>\n                                    <div style={{marginTop:\"10px\"}}>    \n                                        <Label for=\"air_quality_level\"><strong>AQI:{\"  \" + items.aqms_message}</strong></Label>\n                                    </div>\n                                </ol>\n                            </div>\n\n                        </Col>\n                    </Row>\n                </Container>     \n            </div>\n        );\n    }\n}\n\nexport default SecondFloor;","import AppNavbar from './AppNavbar';\nimport React, { Component } from 'react';\nimport { Container, Label, Row, Col } from 'reactstrap';\nimport BackendService from '../services/BackendService';\n\nimport '../../App.css';\n\nclass ThirdFloor extends Component {\n\n    /* uses a backend service to get all the data present in the first floor */\n    constructor(props) {\n        super(props);\n        this.state = {\n        items: [],\n        };\n    }\n    /* stores the stream data */\n    componentDidMount() {\n        BackendService.getThirdFloor()\n        .then((response) =>  this.setState({items: response.data}))\n        .catch(error => {\n            console.error(error);\n          });\n        \n        };\n  \n    /* this shows the lastest aqi record in that floor */\n    render() {\n        const {items } = this.state;\n        return (\n            <div>\n                <AppNavbar/>\n                <Container fluid>\n                    <Row style={{marginTop:\"20px\"}}>\n                        <Col sm=\"12\" md={{ size: 4, offset: 4 }}>\n                            <div style={{marginTop:\"20px\"}}>\n                                <Label for=\"welcome\"><strong>Here is the third floor data, {items.timeStamp} :-)</strong></Label>\n                            </div>\n\n                            <div style={{marginTop:\"20px\"}} className='login-form'> \n                                \n                                <ol key = { items.timeStamp } >\n                                    <div style={{marginTop:\"10px\"}}> \n                                        <Label for=\"floor\"><strong>Floor:{ \"  \" +items.floor}</strong></Label>\n                                    </div>\n\n                                    <div style={{marginTop:\"10px\"}}>      \n                                        <Label for=\"o2_level\"><strong>Oxygen Level:{ \"  \" + items.o2_level}</strong></Label>\n                                    </div>\n\n                                    <div style={{marginTop:\"10px\"}}>\n                                        <Label for=\"co2_level\"><strong>CO2 level:{ \"  \" + items.co2_level}</strong></Label>\n                                    </div>\n\n                                    <div style={{marginTop:\"10px\"}}>    \n                                        <Label for=\"so2_level\"><strong>SO2 level:{\"  \" + items.so2_level}</strong></Label>\n                                    </div>\n\n                                    <div style={{marginTop:\"10px\"}}>      \n                                        <Label for=\"co_level\"><strong>CO level:{ \"  \" + items.co_level}</strong></Label>\n                                    </div>\n\n                                    <div style={{marginTop:\"10px\"}}>\n                                        <Label for=\"c_level\"><strong>C level:{ \"  \" + items.c_level}</strong></Label>\n                                    </div>\n\n                                    <div style={{marginTop:\"10px\"}}>    \n                                        <Label for=\"air_quality_level\"><strong>AQI:{\"  \" + items.aqms_message}</strong></Label>\n                                    </div>\n                                </ol>\n                                            \n                            </div>\n\n                        </Col>\n                    </Row>\n                </Container>     \n            </div>\n        );\n    }\n}\n\n\nexport default ThirdFloor;\n","import AppNavbar from './AppNavbar';\nimport React, { Component } from 'react';\nimport BackendService from '../services/BackendService';\nimport '../../App.css';\n\n/* uses a backend service to get all the data present in the all floors */\nclass AllData extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n        items: [],\n        };\n    }\n\n    /* stores the data in the form of json */\n    componentDidMount() {\n        BackendService.getAllData()\n        .then((response) =>  this.setState({items: response.data}))\n        .catch(error => {\n            console.error(error);\n          });\n        \n    };\n\n    \n  \n    /* renders the json data */\n    render() {\n\n        const getColor = (aqms, isError) => {\n            if (isError === \"False\") {\n                if (aqms === 'Air Quality is good and healthy :-)') return 'green';\n                else if (aqms === 'Air Quality is hazardous, please do vacate the floor immediately, DANGER DANGER!!!!!' || aqms === 'Air Quality is unhealthy, please do vacate the floor!!!!' || aqms === 'Air Quality is extremely unhealthy, please do vacate the floor immediately!!!!!') return 'red';\n                else if (aqms === \"Air Quality is which is unhealthy for sensetive people, please do vacate the floor if you're sensetive :-)\") return 'orange';\n                return '#90EE90';\n            }\n            return '';\n        };\n\n        const gasColor = (aqms, isError) => {\n            if (isError === \"False\") {\n                if (aqms >= 150 && aqms <= 200) return 'red';\n                else if (aqms >= 100 && aqms <= 149) return 'orange';\n                else if (aqms >= 70 && aqms <= 99) return '#90EE90';\n            }\n            return '';\n        }\n\n        const o2Color = (aqms, isError) => {\n            if(isError === \"False\") {\n                if (aqms <= 200) return 'red';\n                else if (aqms >= 200 && aqms <= 400) return 'orange';\n                else if (aqms >= 401 && aqms <= 500) return '#90EE90';\n            }\n            return '';\n        }\n        \n        const checkError = (isError) => {\n            if (isError === \"True\") return 'red';\n        }\n\n        const {items } = this.state;\n        return (\n            <div>\n                <AppNavbar/>\n                                {/* <Label for=\"welcome\"><strong>AQI Data</strong></Label>  */}\n                                <table>\n                                   <thead>\n                                        <tr>\n                                            <th ><strong>timeStamp</strong></th>\n                                            <th ><strong>floor</strong></th>\n                                            <th ><strong>o2_level</strong></th>\n                                            <th ><strong>co2_level</strong></th>\n                                            <th ><strong>so2_level</strong></th>\n                                            <th ><strong>co_level</strong></th>\n                                            <th ><strong>c_level</strong></th>\n                                            <th ><strong>air_quality_level</strong></th>\n                                        </tr>\n                                   </thead>\n                                    \n                                   <tbody>\n                                        {items.map((item) => ( \n                                            <tr key = { item.id } style = {{color: 'black', background: checkError(item.isError)}}> \n                                                    <td><strong>{item.timeStamp}</strong></td>\n                                                    <td><strong>{item.floor}</strong></td>\n                                                    <td style={{ color: o2Color(item.o2_level, item.isError) }}>{(item.isError === \"True\") ? '####' : <strong>{item.o2_level}</strong>}</td>\n                                                    <td style={{ color: gasColor(item.co2_level, item.isError) }}> {(item.isError === \"True\") ? '####' : <strong>{item.co2_level}</strong>}</td>\n                                                    <td style={{ color: gasColor(item.so2_level, item.isError) }}> {(item.isError === \"True\") ? '####' : <strong>{item.so2_level}</strong>}</td>\n                                                    <td style={{ color: gasColor(item.co_level, item.isError) }}> {(item.isError === \"True\") ? '####' : <strong>{item.co_level}</strong>}</td>\n                                                    <td style={{ color: gasColor(item.c_level, item.isError) }}> {(item.isError === \"True\") ? '####' : <strong>{item.c_level}</strong>}</td>\n                                                    <td style={{ color: getColor(item.aqms_message, item.isError) }}> <strong>{item.aqms_message}</strong></td>\n                                                </tr>\n                                        ))}\n                                    </tbody>\n  \n                                </table>\n\n                                \n                                \n                            </div>\n                   \n        );\n    }\n}\n\nexport default AllData;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport FirstFloor from './app/components/FirstFloor';\nimport SecondFloor from './app/components/SecondFloor';\nimport ThirdFloor from './app/components/ThirdFloor';\nimport AllData from './app/components/AllData';\n\n/* redirecting to different pages with help of routes */\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route path='/allData' exact={true} component={AllData}/>\n          <Route path='/' exact={true} component={FirstFloor}/>\n          <Route path='/firstFloor' exact={true} component={FirstFloor}/>\n          <Route path='/secondFloor' exact={true} component={SecondFloor}/>\n          <Route path='/thirdFloor' exact={true} component={ThirdFloor}/>\n        </Switch>\n      </Router>\n    )\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}